# token-tests

Test suite for a standard "Maker-style" ERC20 token. An example of such a standard token can be found in `src/tests/SampleToken.sol`.

## Getting Started

Run `forge install makerdao/token-tests` in your newly setup repository.

There are two possible ways to use `token-tests`

### 1) Explicitely specifying your tests in your test class

Inherit your test contract from `token-tests/TokenChecks.sol` instead of `std-forge/Test.sol`. You will then be able to call individual token testing functions (all starting with the prefix `check`) or, alternatively, bulk testing functions such as `checkERC20()`, `checkMintBurn()` or `checkPermit()`.

If you wish to use fuzz testing functions to fuzz test your token, inherit your test contract from `token-tests/FuzzTokenChecks.sol`. You will then be able to call any of the token fuzz testing functions (all starting with the prefix `fuzzCheck`).

You may wish to look at the tests in `tests` for more detailed example usage.

### 2) Letting `token-tests` handle testing for you

Inherit your test contract from `token-tests/TokenTests.sol` instead of `std-forge/Test.sol`. You will then need to set the following inherited variables:

```
    function setUp() public {
        _token_ = address(new SampleToken());
        _tokenName_ = "Sample Token";
        _contractName_ = "SampleToken";
        _symbol_ = "TKN";
        TokenLike(_token_).deny(address(this));
    }
```

That's it. A suite of tests covering Mint/Burn, ERC20 functionalities and Permit will automatically be run for you.
